{"ast":null,"code":"var _jsxFileName = \"/Users/theodortredal/Desktop/ShloomBerg Frontent/frontend/src/components/Search.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styling/Search.css\";\n\n/**\n * Search component, should only take in a string input\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const handleChange = event => {\n    setSearchInput(event === null || event === void 0 ? void 0 : event.target.value);\n  };\n\n  /**Maybe create and call a dispatcher function that tries to find the right API call for the search */\n  const handleClick = () => {\n    console.log(searchInput);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search\",\n      type: \"text\",\n      value: searchInput,\n      onChange: handleChange,\n      placeholder: \"Search for ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Go\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBar, \"7jaUvtQT89vZZF+Gjg+8PUuVm+0=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchBar","_s","searchInput","setSearchInput","handleChange","event","target","value","handleClick","console","log","children","className","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/theodortredal/Desktop/ShloomBerg Frontent/frontend/src/components/Search.tsx"],"sourcesContent":["import React, {useState} from \"react\"\nimport \"../styling/Search.css\"\n\n/**\n * Search component, should only take in a string input\n */\n\n\nconst SearchBar = () => {\n\n    const [searchInput, setSearchInput] = useState<string>(\"\");\n\n    const handleChange = (event: any) => {\n        setSearchInput(event?.target.value);\n    }\n\n    /**Maybe create and call a dispatcher function that tries to find the right API call for the search */\n    const handleClick = () => {\n        console.log(searchInput);\n    }\n\n    return (\n        <div>\n            <input className=\"search\"\n            type=\"text\"\n            value={searchInput}\n            onChange={handleChange}\n            placeholder=\"Search for ...\"\n\n            ></input>\n            <button\n            onClick={handleClick}\n            \n            >Go</button>\n\n\n        </div>\n    )\n}\n\n\nexport default SearchBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,uBAAuB;;AAE9B;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAE1D,MAAMO,YAAY,GAAIC,KAAU,IAAK;IACjCF,cAAc,CAACE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBC,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;EAC5B,CAAC;EAED,oBACIH,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAOa,SAAS,EAAC,QAAQ;MACzBC,IAAI,EAAC,MAAM;MACXN,KAAK,EAAEL,WAAY;MACnBY,QAAQ,EAAEV,YAAa;MACvBW,WAAW,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpB,CAAC,eACTpB,OAAA;MACAqB,OAAO,EAAEZ,WAAY;MAAAG,QAAA,EAEpB;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGX,CAAC;AAEd,CAAC;AAAAlB,EAAA,CA9BKD,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}